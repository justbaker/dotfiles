" utf-8
scriptencoding utf-8
set encoding=utf-8

" basic
execute pathogen#infect()
filetype plugin indent on
syntax enable

" Always show line numbers
set number
set textwidth=80

" Active Theme:
colorscheme muon

" Available Themes:
" colorscheme atom
" colorscheme getafe
" colorscheme github
" colorscheme inkpot
" colorscheme lucario
" colorscheme muon

" **************** CONVENIENCE MAPPINGS ************
" Set the leader key to comma (normally, it's "\")
let mapleader = ","
"
" Ctrl-L recolors the screen when it gets confused.
noremap <c-l> <c-l>:syntax sync fromstart<CR>
inoremap <c-l> <esc><c-l>:syntax sync fromstart<CR>a

" Don't use swap files, they make me cranky
set noswapfile
" Put swapfiles in a central place instead of the current directory.
" Vim will use the first directory that exists.
set directory=~/.vim_swap,~/tmp,/var/tmp,$HOME/Local\ Settings/Temp

" Same thing for backup files (see `:help backup`)
set backupdir=~/.vim_backup,~/tmp,/var/tmp,$HOME/Local\ Settings/Temp

" ****************** SCROLLING *********************
set scrolloff=8      " Number of lines from vertical edge to start scrolling
set sidescrolloff=15 " Number of cols from horizontal edge to start scrolling
set sidescroll=1     " Number of cols to scroll at a time

" ****************** SPLITTING *********************
set splitright " vsplit makes new pane to the right (not left)
set splitbelow " split  makes new pane below (not above)

" ****************** SEARCHING *********************
set incsearch     " do incremental searching
set ignorecase    " do case-insensitive searches
set smartcase     " ... unless the search contains upper-case characters
set hlsearch      " highlight all matched terms
" Pressing return clears highlighted search
:nnoremap <CR> :nohlsearch<CR>/<BS>
" Pressing control + return also clears (for use in NERDTree)
:nnoremap <c-CR> :nohlsearch<CR>/<BS>

" ***************** TABS ***************************
" Usually, you want 2 spaces per tab, so these lines make this the default.
" There are ways to make vi do clever things with tabs in different
" situations, like MS Word can, but I *always* want tab to behave the same way
" -- so I set all three of these tab-related values the same.
" (To overrride these per file type, put commands in .vim/ftplugin/)
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab " insert spaces instead of tab characters

" *********** DISPLAYING HIDDEN CHARACTERS *********
" Beautify display of hidden characters (tabs, line breaks, etc).
" (`:set list!` to toggle display; `:help listchars` for info )
" set listchars=nbsp:☠,trail:⋅,tab:▸\ ,eol:¬,extends:❯,precedes:❮
set listchars=trail:⋅,tab:▸\ ,eol:¬,extends:❯,precedes:❮

" From Nathan's section of the gvim

"** When indenting in visual mode, return to visual mode **
" indent with > or tab
vmap > >gv
vmap <tab> >gv
" outdent with < or shift-tab
vmap < <gv
vmap <S-Tab> <gv
" Shift-tab in insert mode is a backspace (unindent)
imap <S-Tab> <BS>

" Move lines up and down
nmap <C-J> :m +1 <CR>
nmap <C-K> :m -2 <CR>

" Inserts the path of the currently edited file into a command
" Command mode: Ctrl+P
cmap <C-P> <C-R>=expand("%:p:h") . "/" <CR>

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_enable_signs=1

let g:syntastic_quiet_messages = { "type": "style" }
let g:syntastic_html_tidy_exec = 'tidy5'
let g:syntastic_javascript_checkers = ['eslint']
let g:jsx_ext_required = 0

" Ctrl+A start of line CTRL+E end of line
"
" Insert Mode
"
inoremap <C-e> <Esc>A
inoremap <C-a> <Esc>I
" Command Mode
nnoremap <C-e> <End>
nnoremap <C-a> <Home>

" CTRL+x to copy in visual mode
" CTRL+V to paste in visual mode
vmap <C-x> :!pbcopy<CR>
vmap <C-c> :w !pbcopy<CR><CR>

" Copy current file to clipboard
vmap <C-i> :!cat % \| pbcopy
nnoremap <C-i> :!cat % \| pbcopy

" Spellcheck markdown
autocmd BufRead,BufNewFile *.md setlocal spell

" Set highlight mode for Capfiles,Gemfiles, and Rakefiles
au BufRead,BufNewFile Capfile,Gemfile,Rakefile,*.rake,*.cap set filetype=ruby

" Set json indent to 4 space
"
au BufRead,BufNewFile *.json set filetype=json
autocmd Filetype json setlocal ts=4 sw=4 sts=0 expandtab

"
" Java specific vim config. This assumes java 7 or greater, and that
" https://github.com/artur-shaik/vim-javacomplete2 is installed.
"

" Configure java to use config file for classpaths
let g:syntastic_java_javac_config_file_enabled = 1

" 4 Spaces for java!
autocmd Filetype java setlocal ts=4 sw=4 sts=0 expandtab

" Enable java autocomplete
autocmd FileType java setlocal omnifunc=javacomplete#Complete

" Add missing imports w/ F6
nmap <F6> <Plug>(JavaComplete-Imports-AddMissing)
imap <F6> <Plug>(JavaComplete-Imports-AddMissing)

" Remove unneeded imports w/ F7
nmap <F7> <Plug>(JavaComplete-Imports-RemoveUnused)
imap <F7> <Plug>(JavaComplete-Imports-RemoveUnused)

let g:syntastic_mode_map = { "mode": "active",
                           \ "active_filetypes": [],
                           \ "passive_filetypes": ["scala"] }
